    <HTML> 
	<HEAD> 
	    <TITLE>Mail::Sendmail v. 0.74 - Simple platform independent mailer

</TITLE> 
	</HEAD>

	<BODY><HTML>
	<FONT FACE="Arial, Geneva, Helvetica">

<!-- INDEX BEGIN -->

<UL>

	<LI><A HREF="#NAME">NAME</A>
	<LI><A HREF="#SYNOPSIS">SYNOPSIS</A>
	<LI><A HREF="#DESCRIPTION">DESCRIPTION</A>
	<LI><A HREF="#INSTALLATION">INSTALLATION</A>
	<LI><A HREF="#FEATURES">FEATURES</A>
	<LI><A HREF="#LIMITATIONS">LIMITATIONS</A>
	<LI><A HREF="#CONFIGURATION">CONFIGURATION</A>
	<LI><A HREF="#DETAILS">DETAILS</A>
	<LI><A HREF="#ANOTHER_EXAMPLE">ANOTHER EXAMPLE</A>
	<LI><A HREF="#CHANGES">CHANGES</A>
	<LI><A HREF="#AUTHOR">AUTHOR</A>
	<LI><A HREF="#NOTES">NOTES</A>
</UL>
<!-- INDEX END -->

<HR>
<P>
<H3><A NAME="NAME">NAME

</A></H3>
Mail::Sendmail v. 0.74 - Simple platform independent mailer


<P>

<P>
<HR>
<H3><A NAME="SYNOPSIS">SYNOPSIS

</A></H3>
<PRE>  use Mail::Sendmail;
</PRE>

<P>

<PRE>  %mail = ( To      =&gt; 'you@there.com',
            From    =&gt; 'me@here.com',
            Message =&gt; &quot;This is a minimalistic message&quot;
           );
</PRE>

<P>

<PRE>  if (sendmail %mail) { print &quot;Mail sent OK.\n&quot; }
  else { print &quot;Error sending mail: $Mail::Sendmail::error \n&quot; }
</PRE>

<P>

<PRE>  print &quot;\n\$Mail::Sendmail::log says:\n&quot;, $Mail::Sendmail::log;
</PRE>

<P>

<P>
<HR>
<H3><A NAME="DESCRIPTION">DESCRIPTION

</A></H3>
Simple platform independent e-mail from your perl script.


<P>

After struggling for some time with various command-line mailing programs
which never did exactly what I wanted, I put together this Perl only
solution.


<P>

Mail::Sendmail contains mainly &amp;sendmail, which takes a hash with the
message to send and sends it...


<P>

<P>
<HR>
<H3><A NAME="INSTALLATION">INSTALLATION

</A></H3>
Standard:


<P>

<PRE>    perl Makefile.PL
    make
    make test
    make install
</PRE>

<P>

or manual:


<P>

<PRE>    Copy Sendmail.pm to Mail/ in your Perl lib directory.
      (eg. c:\Perl\lib\Mail\, c:\Perl\lib\site\Mail\,
       /usr/lib/perl5/site_perl/Mail/, ...
       or whatever it is on your system)
</PRE>

<P>

At the top of Sendmail.pm, set your default SMTP server, unless you specify
it with each message, or want to use the default.


<P>

See the <A HREF="#NOTES">NOTES</A> section about MIME::QuotedPrint. It is not required but strongly
recommended.


<P>

<P>
<HR>
<H3><A NAME="FEATURES">FEATURES

</A></H3>
Internal Bcc: and Cc: support (even on broken servers)


<P>

Allows real names in From: and To: fields


<P>

Doesn't send unwanted headers, and allows you to send any
<CODE>header(s)</CODE> you want


<P>

Adds the Date header if you don't supply your own


<P>

Automatic Time Zone detection


<P>


<P>
<HR>
<H3><A NAME="LIMITATIONS">LIMITATIONS

</A></H3>
Doesn't send attachments, unless you provide the appropriate headers and
boundaries yourself, but that may not be practical, and I haven't tested
it.


<P>

The SMTP server has to be set manually in Sendmail.pm or in your script,
unless you can live with the default (Compuserve's smpt.site1.csi.com).


<P>

<P>
<HR>
<H3><A NAME="CONFIGURATION">CONFIGURATION

</A></H3>
<DL>
<DT><STRONG><A NAME="item_default">default SMTP server

</A></STRONG><DD>
Set this at the top of Sendmail.pm, unless you want to use the provided
default.


<P>

You can override the default for a particular message by adding it to your
<CODE>%message</CODE> hash with a key of 'Smtp':


<P>

<CODE>$message{Smtp} = 'newserver.my-domain.com';</CODE>




<P>

Overriding it globally in your script with:


<P>

<CODE>$Mail::Sendmail::default_smtp_server = 'newserver.my-domain.com';</CODE>




<P>

also works, but this may change in future versions! Better do it in
Sendmail.pm or in the <CODE>%message</CODE> hash.


<P>

<DT><STRONG><A NAME="item_other">other configuration settings

</A></STRONG><DD>
See individual entries under DETAILS below.


<P>

</DL>
<P>
<HR>
<H3><A NAME="DETAILS">DETAILS

</A></H3>
<DL>
<DT><STRONG><A NAME="item_sendmail">sendmail()

</A></STRONG><DD>
sendmail is the only thing exported to your namespace by default


<P>

<CODE>sendmail(%mail) || print "Error sending mail: $Mail::Sendmail::error\n";</CODE>




<P>

It takes a hash containing the full message, with keys for all headers,
Body,and optionally for another non-default SMTP server and/or Port. It
returns 1 on success or 0 on error, and rewrites <CODE>$Mail::Sendmail::error</CODE>
and <CODE>$Mail::Sendmail::log</CODE>.


<P>

Keys are NOT case-sensitive.


<P>

The colon after headers is not necessary.


<P>

The Body part key can be called ``Body'', ``Message'' or ``Text''. The smtp
server key can be called ``Smtp'' or ``Server''.


<P>

The following headers are added unless you specify them yourself:


<P>

<PRE>    Mime-version: 1.0
    Content-type: 'text/plain; charset=&quot;iso-8859-1&quot;'
</PRE>

<P>

<PRE>    Content-transfer-encoding: quoted-printable
    or (if MIME::QuotedPrint not installed)
    Content-transfer-encoding: 8bit
</PRE>

<P>

<PRE>    Date: [string returned by time_to_date()]
</PRE>

<P>

If you put an 'X-mailer' header, the package version number is appended to
it.


<P>

</DL>
The following are not exported by default, but you can still access them
with their full name, or request their export on the use line like in: <CODE>use Mail::Sendmail qw($address_rx time_to_date);</CODE>




<P>

<DL>
<DT><STRONG><A NAME="item_Mail">Mail::Sendmail::time_to_date()

</A></STRONG><DD>
convert time ( as from <CODE>time()</CODE> ) to an RFC 822 compliant string for the Date header. See also
$Mail::Sendmail::TZ.


<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_error">$Mail::Sendmail::error

</A></STRONG><DD>
When you don't run with the -w flag, the module sends no errors to STDERR,
but puts anything it has to complain about in here. You should probably
always check if it says something.


<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_log">$Mail::Sendmail::log

</A></STRONG><DD>
A summary that you could write to a log file after each send


<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_address_rx">$Mail::Sendmail::address_rx

</A></STRONG><DD>
A handy regex to recognize e-mail addresses.


<P>

<PRE>  Example:
    $rx = $Mail::Sendmail::address_rx;
    if (/$rx/) {
      $address=$1;
      $user=$2;
      $domain=$3;
    }
</PRE>

<P>

The regex is a compromise between RFC 822 spec. and a simple regex. See the
code and comments if interested, and let me know if it doesn't recognize
what you expect.


<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_default_smtp_se">$Mail::Sendmail::default_smtp_server

</A></STRONG><DD>
see Configuration above.


<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_default_smtp_po">$Mail::Sendmail::default_smtp_port

</A></STRONG><DD>
If your server doesn't use the default port 25, change this at the top of
Sendmail.pm, or override it for a particular message by adding it to your
<CODE>%message</CODE> hash with a key of 'Port':


<P>

<CODE>$message{Port} = 8025;</CODE>




<P>

Global overriding with <CODE>$Mail::Sendmail::default_smtp_port = 8025;</CODE>
is deprecated as above for the server, since future versions may not use
this anymore.


<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_default_sender">$Mail::Sendmail::default_sender

</A></STRONG><DD>
You can set this in Sendmail.pm, so you don't need to define %message{From}
in every message.


<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_TZ">$Mail::Sendmail::TZ

</A></STRONG><DD>
Your time zone. It is set automatically, from the difference between
<CODE>time()</CODE> and <CODE>gmtime(),</CODE> unless you have preset it in
Sendmail.pm.


<P>

Or you can force it from your script, using an RFC 822 compliant format:


<P>

<CODE>$Mail::Sendmail::TZ = "+0200"; # Western Europe in summer</CODE>




<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_use_MIME">$Mail::Sendmail::use_MIME

</A></STRONG><DD>
This is set to 1 if you have MIME::QuotedPrint, to 0 otherwise. It's
available in case you want to force it to zero and do the encoding
yourself. You would want this to do multipart messages and/or attachments,
but you may prefer using some other package if you have complex needs.


<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_connect_retries">$Mail::Sendmail::connect_retries

</A></STRONG><DD>
Number of retries when the connection to the server fails. Default is 1
retry (= 2 connection attempts).


<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_retry_delay">$Mail::Sendmail::retry_delay

</A></STRONG><DD>
Seconds to wait before retrying to connect to the server. Default is a low
5 seconds, so if you output results to a web page, you don't time out. Set
it much higher for scripts that don't mind waiting.


<P>

<DT><STRONG><A NAME="item__Mail_Sendmail_VERSION">$Mail::Sendmail::VERSION

</A></STRONG><DD>
The package version number (this cannot be exported)


<P>

</DL>
<P>
<HR>
<H3><A NAME="ANOTHER_EXAMPLE">ANOTHER EXAMPLE

</A></H3>
<PRE>  use Mail::Sendmail;
</PRE>

<P>

<PRE>  print STDERR &quot;Testing Mail::Sendmail version $Mail::Sendmail::VERSION\n&quot;;
  print STDERR &quot;smtp server: $Mail::Sendmail::default_smtp_server\n&quot;;
  print STDERR &quot;server port: $Mail::Sendmail::default_smtp_port\n&quot;;
</PRE>

<P>

<PRE>  %mail = (
      #To      =&gt; 'No to field this time, only Bcc and Cc',
      #From    =&gt; 'not needed, use default',
      Bcc     =&gt; 'Someone &lt;him@there.com&gt;, Someone else her@there.com',
      # only addresses are extracted from Bcc, real names disregarded
      Cc      =&gt; 'Yet someone else &lt;xz@whatever.com&gt;',
      # Cc will appear in the header. (Bcc will not)
      Subject =&gt; 'Test message',
      'X-Mailer' =&gt; &quot;Mail::Sendmail&quot;,
  );
</PRE>

<P>

<PRE>  $mail{Smtp} = 'special_server.for-this-message-only.domain.com';
  $mail{'X-custom'} = 'My custom additionnal header';
  $mail{'mESSaGE : '} = &quot;The message key looks terrible, but works.&quot;;
  # cheat on the date:
  $mail{Date} = Mail::Sendmail::time_to_date( time() - 86400 ),
</PRE>

<P>

<PRE>  if (sendmail %mail) { print &quot;Mail sent OK.\n&quot; }
  else { print &quot;Error sending mail: $Mail::Sendmail::error \n&quot; }
</PRE>

<P>

<PRE>  print STDERR &quot;\n\$Mail::Sendmail::log says:\n&quot;, $Mail::Sendmail::log;
</PRE>

<P>

<P>
<HR>
<H3><A NAME="CHANGES">CHANGES

</A></H3>
Many changes and bug-fixes since version 0.73. See Changes file.


<P>

<P>
<HR>
<H3><A NAME="AUTHOR">AUTHOR

</A></H3>
Milivoj Ivkovic <A HREF="MAILTO:mi@alma.ch">mi@alma.ch</A> or <A
HREF="MAILTO:ivkovic@csi.com">ivkovic@csi.com</A>


<P>

<P>
<HR>
<H3><A NAME="NOTES">NOTES

</A></H3>
MIME::QuotedPrint is used by default on every message if available. It is
needed to send accented characters reliably. (It is in the MIME-Base64
package at <A
HREF="http://www.perl.com/CPAN/modules/by-module/MIME/">http://www.perl.com/CPAN/modules/by-module/MIME/</A>
).


<P>

When using this module in CGI scripts, look out for problems related to
messages sent to STDERR. Some servers don't like it, or log them somewhere
where you don't know, or compile-time errors are sent before you printed
the HTML headers. Either be sure to not run with the -w flag, or (better)
print the HTML headers in a BEGIN{} block, and maybe redirect STDERR to
STDOUT.


<P>

This module was first based on a script by Christian Mallwitz.


<P>

You can use it freely. (someone complained this is too vague. So, more
precisely: do whatever you want with it, but if it's bad - like using it
for spam or claiming you wrote it alone, or ...? - terrible things will
happen to you!)


<P>

I would appreciate a short (or long) e-mail note if you use this (and even
if you don't, especially if you care to say why). And of course,
bug-reports and/or suggestions are welcome.


<P>

Last revision: 01.08.98. Latest version should be available at <A
HREF="http://alma.ch/perl/mail.htm">http://alma.ch/perl/mail.htm</A> , and
a few days later on CPAN.


<P>

</DL>
    </BODY>

    </HTML>
